'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _ValidationError = require('../../ValidationError');

var _ValidationError2 = _interopRequireDefault(_ValidationError);

var _QueryBuilderOperation = require('./QueryBuilderOperation');

var _QueryBuilderOperation2 = _interopRequireDefault(_QueryBuilderOperation);

var _promiseUtils = require('../../utils/promiseUtils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EagerFetchOperation = function (_QueryBuilderOperatio) {
  (0, _inherits3.default)(EagerFetchOperation, _QueryBuilderOperatio);

  function EagerFetchOperation(builder, name, opt) {
    (0, _classCallCheck3.default)(this, EagerFetchOperation);

    var _this = (0, _possibleConstructorReturn3.default)(this, _QueryBuilderOperatio.call(this, builder, name, opt));

    _this.expression = null;
    return _this;
  }

  EagerFetchOperation.prototype.call = function call(builder, args) {
    var _this2 = this;

    this.expression = args[0].clone();

    _lodash2.default.each(args[1], function (filter) {
      _this2.expression.addAnonymousFilterAtPath(filter.path, filter.filter);
    });

    return true;
  };

  EagerFetchOperation.prototype.onAfterInternal = function onAfterInternal(builder, result) {
    var _this3 = this;

    var models = _lodash2.default.isArray(result) ? result : [result];

    if (_lodash2.default.isEmpty(models) || !(models[0] instanceof builder.modelClass())) {
      return result;
    }

    var promises = [];

    this.expression.forEachChild(function (child) {
      var relation = builder.modelClass().getRelations()[child.name];

      if (!relation) {
        throw new _ValidationError2.default({ eager: 'unknown relation "' + child.name + '" in an eager expression' });
      }
    });

    _lodash2.default.each(builder.modelClass().getRelations(), function (relation) {
      var childExpression = _this3.expression.childExpression(relation.name);

      if (childExpression) {
        promises.push(_this3._fetchRelation(builder, models, relation, childExpression));
      }
    });

    return _bluebird2.default.all(promises).return(result);
  };

  EagerFetchOperation.prototype._fetchRelation = function _fetchRelation(builder, models, relation, childExpression) {
    var queryBuilder = relation.ownerModelClass.RelatedQueryBuilder.forClass(relation.relatedModelClass).childQueryOf(builder).eager(childExpression);

    queryBuilder.callQueryBuilderOperation(relation.find(queryBuilder, models), []);

    _lodash2.default.each(childExpression.args, function (filterName) {
      var filter = childExpression.filters[filterName];

      if (!_lodash2.default.isFunction(filter)) {
        throw new _ValidationError2.default({ eager: 'could not find filter "' + filterName + '" for relation "' + relation.name + '"' });
      }

      filter(queryBuilder);
    });

    return queryBuilder;
  };

  return EagerFetchOperation;
}(_QueryBuilderOperation2.default);

exports.default = EagerFetchOperation;