'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _QueryBuilderOperation = require('./QueryBuilderOperation');

var _QueryBuilderOperation2 = _interopRequireDefault(_QueryBuilderOperation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DelegateOperation = function (_QueryBuilderOperatio) {
  (0, _inherits3.default)(DelegateOperation, _QueryBuilderOperatio);

  function DelegateOperation(builder, name, opt) {
    (0, _classCallCheck3.default)(this, DelegateOperation);

    var _this = (0, _possibleConstructorReturn3.default)(this, _QueryBuilderOperatio.call(this, builder, name, opt));

    _this.delegate = opt.delegate;
    _this.isWriteOperation = _this.delegate.isWriteOperation;
    return _this;
  }

  DelegateOperation.prototype.formatter = function formatter() {
    return this.delegate.formatter();
  };

  DelegateOperation.prototype.raw = function raw() {
    return this.delegate.raw.apply(this.delegate, arguments);
  };

  DelegateOperation.prototype.call = function call(builder, args) {
    return this.delegate.call(builder, args);
  };

  DelegateOperation.prototype.onBefore = function onBefore(builder, result) {
    return this.delegate.onBefore(builder, result);
  };

  DelegateOperation.prototype.hasOnBefore = function hasOnBefore() {
    return this.onBefore !== DelegateOperation.prototype.onBefore || this.delegate.hasOnBefore();
  };

  DelegateOperation.prototype.onBeforeInternal = function onBeforeInternal(builder, result) {
    return this.delegate.onBeforeInternal(builder, result);
  };

  DelegateOperation.prototype.hasOnBeforeInternal = function hasOnBeforeInternal() {
    return this.onBeforeInternal !== DelegateOperation.prototype.onBeforeInternal || this.delegate.hasOnBeforeInternal();
  };

  DelegateOperation.prototype.onBeforeBuild = function onBeforeBuild(builder) {
    return this.delegate.onBeforeBuild(builder);
  };

  DelegateOperation.prototype.hasOnBeforeBuild = function hasOnBeforeBuild() {
    return this.onBeforeBuild !== DelegateOperation.prototype.onBeforeBuild || this.delegate.hasOnBeforeBuild();
  };

  DelegateOperation.prototype.onBuild = function onBuild(knexBuilder, builder) {
    return this.delegate.onBuild(knexBuilder, builder);
  };

  DelegateOperation.prototype.hasOnBuild = function hasOnBuild() {
    return this.onBuild !== DelegateOperation.prototype.onBuild || this.delegate.hasOnBuild();
  };

  DelegateOperation.prototype.onAfterQuery = function onAfterQuery(builder, result) {
    return this.delegate.onAfterQuery(builder, result);
  };

  DelegateOperation.prototype.hasOnAfterQuery = function hasOnAfterQuery() {
    return this.onAfterQuery !== DelegateOperation.prototype.onAfterQuery || this.delegate.hasOnAfterQuery();
  };

  DelegateOperation.prototype.onAfterInternal = function onAfterInternal(builder, result) {
    return this.delegate.onAfterInternal(builder, result);
  };

  DelegateOperation.prototype.hasOnAfterInternal = function hasOnAfterInternal() {
    return this.onAfterInternal !== DelegateOperation.prototype.onAfterInternal || this.delegate.hasOnAfterInternal();
  };

  DelegateOperation.prototype.onAfter = function onAfter(builder, result) {
    return this.delegate.onAfter(builder, result);
  };

  DelegateOperation.prototype.hasOnAfter = function hasOnAfter() {
    return this.onAfter !== DelegateOperation.prototype.onAfter || this.delegate.hasOnAfter();
  };

  DelegateOperation.prototype.queryExecutor = function queryExecutor(builder) {
    return this.delegate.queryExecutor(builder);
  };

  DelegateOperation.prototype.hasQueryExecutor = function hasQueryExecutor() {
    return this.queryExecutor !== DelegateOperation.prototype.queryExecutor || this.delegate.hasQueryExecutor();
  };

  return DelegateOperation;
}(_QueryBuilderOperation2.default);

exports.default = DelegateOperation;